--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (0 == v26) then
				v27 = {};
				for v44 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v44, v44 + 1)), v1(v2(v25, 1 + ((v44 - 1) % #v25), 1 + ((v44 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = _G[v7("\152\226\31\196\129\239\20\195", "\236\141\113\177")];
	local v9 = _G[v7("\32\226\17\203\65\52", "\83\150\99\162\47")][v7("\47\53\191\251", "\77\76\203\158\84\235\37")];
	local v10 = _G[v7("\76\84\107\71\47\84", "\63\32\25\46\65\51")][v7("\124\228\24\237", "\31\140\121\159\76\28\221\40")];
	local v11 = _G[v7("\95\41\224\239\122\0", "\44\93\146\134\20\103\73\178")][v7("\76\151\20", "\63\226\118\52")];
	local v12 = _G[v7("\193\200\232\197\220\219", "\178\188\154\172")][v7("\237\248\173\81", "\138\139\216\51\108\21\227\106")];
	local v13 = _G[v7("\246\74\85\185\133\81", "\133\62\39\208\235\54\35\180")][v7("\57\39\183", "\75\66\199\30\34\201\39")];
	local v14 = _G[v7("\162\182\244\183\204", "\214\215\150\219\169\195\151\228")][v7("\10\34\216\2\25\247", "\105\77\182\97\120\131\63\37")];
	local v15 = _G[v7("\205\243\170\4\21", "\185\146\200\104\112\77")][v7("\207\138\26\13\203\210", "\166\228\105\104\185")];
	local v16 = _G[v7("\215\206\16\162", "\186\175\100\202\234")][v7("\182\61\118\210\170", "\218\89\19\170")];
	local v17 = _G[v7("\133\136\226\170\135\131\224", "\226\237\150\204")] or function()
		return _ENV;
	end;
	local v18 = _G[v7("\60\209\152\5\135\47\119\59\213\142\4\135", "\79\180\236\104\226\91\22")];
	local v19 = _G[v7("\21\222\87\66\23", "\101\189\54\46\123\222")];
	local v20 = _G[v7("\36\192\60\204\139\35", "\87\165\80\169\232")];
	local v21 = _G[v7("\54\225\156\209\204\119", "\67\143\236\176\175\28")] or _G[v7("\233\221\215\227\211", "\157\188\181\143\182\74\167\143")][v7("\86\131\212\36\132\162", "\35\237\164\69\231\201")];
	local v22 = _G[v7("\245\121\231\206\213\36\188\243", "\129\22\137\187\184\70\217")];
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		local v43;
		while true do
			if (v30 == 0) then
				v31 = 0;
				v32 = nil;
				v33 = nil;
				v34 = nil;
				v30 = 1;
			end
			if (v30 == 2) then
				v39 = nil;
				v40 = nil;
				v41 = nil;
				v42 = nil;
				v30 = 3;
			end
			if (v30 == 1) then
				v35 = nil;
				v36 = nil;
				v37 = nil;
				v38 = nil;
				v30 = 2;
			end
			if (v30 == 3) then
				v43 = nil;
				while true do
					local v45 = 0;
					while true do
						if (v45 == 0) then
							if (3 == v31) then
								local v46 = 0;
								while true do
									if (v46 == 1) then
										function v39(v52)
											local v53 = 0;
											local v54;
											local v55;
											local v56;
											while true do
												if (v53 == 0) then
													v54 = 1675 - (432 + 1243);
													v55 = nil;
													v53 = 1;
												end
												if (1 == v53) then
													v56 = nil;
													while true do
														local v109 = 0;
														while true do
															if (v109 == 0) then
																if (v54 == (0 + 0)) then
																	local v119 = 0;
																	while true do
																		if (v119 == 0) then
																			v55 = nil;
																			if not v52 then
																				local v164 = 0;
																				local v165;
																				while true do
																					if (v164 == 0) then
																						v165 = 0;
																						while true do
																							if (v165 == 0) then
																								v52 = v37();
																								if (v52 == (0 - 0)) then
																									return "";
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v119 = 1;
																		end
																		if (v119 == 1) then
																			v54 = 2 - 1;
																			break;
																		end
																	end
																end
																if (v54 == 1) then
																	local v120 = 0;
																	while true do
																		if (v120 == 1) then
																			v54 = 4 - 2;
																			break;
																		end
																		if (v120 == 0) then
																			v55 = v11(v28, v32, (v32 + v52) - (593 - (586 + 1 + 3 + 2 + 0)));
																			v32 = v32 + v52;
																			v120 = 1;
																		end
																	end
																end
																v109 = 1;
															end
															if (v109 == 1) then
																if (v54 == 3) then
																	return v14(v56);
																end
																if (v54 == 2) then
																	local v121 = 0;
																	while true do
																		if (v121 == 0) then
																			v56 = {};
																			for v142 = 1, #v55 do
																				v56[v142] = v10(v9(v11(v55, v142, v142)));
																			end
																			v121 = 1;
																		end
																		if (v121 == 1) then
																			v54 = 3;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v40 = v37;
										v46 = 2;
									end
									if (v46 == 2) then
										v31 = 4;
										break;
									end
									if (v46 == 0) then
										function v38()
											local v57 = 0;
											local v58;
											local v59;
											local v60;
											local v61;
											local v62;
											local v63;
											local v64;
											while true do
												if (v57 == 3) then
													v64 = nil;
													while true do
														local v110 = 0;
														while true do
															if (v110 == 0) then
																if (v58 == 3) then
																	local v122 = 0;
																	while true do
																		if (v122 == 0) then
																			if (v63 == (0 + 0)) then
																				if (v62 == ((1019 - (456 + 563)) + (0 - 0) + 0 + 0)) then
																					return v64 * 0;
																				else
																					local v167 = 0;
																					local v168;
																					while true do
																						if (v167 == 0) then
																							v168 = 0;
																							while true do
																								if (v168 == 0) then
																									v63 = 1 + 0 + 0 + (0 - 0);
																									v61 = 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif (v63 == (4368 - ((1893 - (295 + 610)) + (3182 - 1849)))) then
																				return ((v62 == 0) and (v64 * ((259 - ((684 - ((991 - (433 + 43)) + 26)) + 115)) / (0 + 0)))) or (v64 * NaN);
																			end
																			return v16(v64, v63 - (4378 - (5519 - 2164))) * (v61 + (v62 / (2 ^ (12 + 8 + 32))));
																		end
																	end
																end
																if (v58 == 1) then
																	local v123 = 0;
																	while true do
																		if (v123 == 0) then
																			v61 = 1 + 0;
																			v62 = (v34(v60, 1 + 0 + 0, (2049 - 1376) - (367 + 99 + (1992 - (79 + 2 + 1724)))) * (2 ^ (1792 - (845 + (1651 - 736))))) + v59;
																			v123 = 1;
																		end
																		if (v123 == 1) then
																			v58 = 2;
																			break;
																		end
																	end
																end
																v110 = 1;
															end
															if (v110 == 1) then
																if (v58 == 2) then
																	local v124 = 0;
																	while true do
																		if (0 == v124) then
																			v63 = v34(v60, 1510 - (1385 + 104), 10 + 7 + 14);
																			v64 = ((v34(v60, 445 - (208 + 33 + 172)) == ((2 + 2) - (5 - 2))) and -(1 + 0)) or 1;
																			v124 = 1;
																		end
																		if (v124 == 1) then
																			v58 = 8 - 5;
																			break;
																		end
																	end
																end
																if (v58 == (0 - 0)) then
																	local v125 = 0;
																	while true do
																		if (v125 == 1) then
																			v58 = 1;
																			break;
																		end
																		if (v125 == 0) then
																			v59 = v37();
																			v60 = v37();
																			v125 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
												if (v57 == 1) then
													v60 = nil;
													v61 = nil;
													v57 = 2;
												end
												if (v57 == 0) then
													v58 = 0 + 0;
													v59 = nil;
													v57 = 1;
												end
												if (v57 == 2) then
													v62 = nil;
													v63 = nil;
													v57 = 3;
												end
											end
										end
										v39 = nil;
										v46 = 1;
									end
								end
							end
							if (v31 == 4) then
								local v47 = 0;
								while true do
									if (v47 == 1) then
										v42 = nil;
										function v42()
											local v65 = 0;
											local v66;
											local v67;
											local v68;
											local v69;
											local v70;
											local v71;
											local v72;
											while true do
												if (v65 == 2) then
													v70 = nil;
													v71 = nil;
													v65 = 3;
												end
												if (v65 == 3) then
													v72 = nil;
													while true do
														local v111 = 0;
														while true do
															if (v111 == 1) then
																if (v66 == 3) then
																	local v126 = 0;
																	while true do
																		if (v126 == 0) then
																			for v144 = 4 - 3, v37() do
																				v68[v144 - 1] = v42();
																			end
																			for v146 = 384 - (296 + (272 - 185)), v37() do
																				v69[v146] = v37();
																			end
																			v126 = 1;
																		end
																		if (1 == v126) then
																			return v70;
																		end
																	end
																end
																if (v66 == 0) then
																	local v127 = 0;
																	while true do
																		if (v127 == 0) then
																			v67 = {};
																			v68 = {};
																			v127 = 1;
																		end
																		if (1 == v127) then
																			v69 = {};
																			v66 = 1;
																			break;
																		end
																	end
																end
																break;
															end
															if (v111 == 0) then
																if (1 == v66) then
																	local v128 = 0;
																	while true do
																		if (0 == v128) then
																			v70 = {v67,v68,nil,v69};
																			v71 = v37();
																			v128 = 1;
																		end
																		if (v128 == 1) then
																			v72 = {};
																			v66 = 2;
																			break;
																		end
																	end
																end
																if (v66 == 2) then
																	local v129 = 0;
																	while true do
																		if (1 == v129) then
																			for v148 = 1 + 0, v37() do
																				local v149 = 0;
																				local v150;
																				local v151;
																				while true do
																					if (v149 == 0) then
																						v150 = 0;
																						v151 = nil;
																						v149 = 1;
																					end
																					if (v149 == 1) then
																						while true do
																							if (v150 == 0) then
																								v151 = v35();
																								if (v34(v151, 1, 1) == 0) then
																									local v175 = 0;
																									local v176;
																									local v177;
																									local v178;
																									local v179;
																									while true do
																										if (v175 == 1) then
																											v178 = nil;
																											v179 = nil;
																											v175 = 2;
																										end
																										if (v175 == 2) then
																											while true do
																												if (0 == v176) then
																													local v194 = 0;
																													while true do
																														if (1 == v194) then
																															v176 = 1;
																															break;
																														end
																														if (v194 == 0) then
																															v177 = v34(v151, (3087 - (878 + 590)) - (1400 + (913 - 696)), 3);
																															v178 = v34(v151, 1810 - (1158 + 648), 6);
																															v194 = 1;
																														end
																													end
																												end
																												if (v176 == 1) then
																													local v195 = 0;
																													while true do
																														if (v195 == 0) then
																															v179 = {v36(),v36(),nil,nil};
																															if (v177 == (0 - 0)) then
																																local v207 = 0;
																																local v208;
																																while true do
																																	if (v207 == 0) then
																																		v208 = 0;
																																		while true do
																																			if (0 == v208) then
																																				v179[117 - (66 + 48)] = v36();
																																				v179[780 - (263 + 513)] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v177 == (1 + 0)) then
																																v179[8 - (9 - 4)] = v37();
																															elseif (v177 == 2) then
																																v179[959 - (623 + 333)] = v37() - (2 ^ (9 + 7));
																															elseif (v177 == (2 + 1)) then
																																local v220 = 0;
																																local v221;
																																while true do
																																	if (v220 == 0) then
																																		v221 = 0;
																																		while true do
																																			if (v221 == 0) then
																																				v179[3] = v37() - (2 ^ (23 - 7));
																																				v179[(2708 - (1070 + 463)) - ((2079 - 1187) + 279)] = v36();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v195 = 1;
																														end
																														if (v195 == 1) then
																															v176 = 2;
																															break;
																														end
																													end
																												end
																												if (3 == v176) then
																													if (v34(v178, (1804 - (179 + 38)) - (744 + (1069 - 229)), 3) == (1 + 0)) then
																														v179[1921 - (170 + 1747)] = v72[v179[15 - 11]];
																													end
																													v67[v148] = v179;
																													break;
																												end
																												if (2 == v176) then
																													local v197 = 0;
																													while true do
																														if (v197 == 1) then
																															v176 = 3;
																															break;
																														end
																														if (v197 == 0) then
																															if (v34(v178, 215 - (8 + 206), 1) == 1) then
																																v179[1151 - (483 + 666)] = v72[v179[2]];
																															end
																															if (v34(v178, 5 - 3, (1243 - (1232 + 5)) - (1969 - (884 + 1081))) == 1) then
																																v179[4 - 1] = v72[v179[798 - (680 + 115)]];
																															end
																															v197 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (0 == v175) then
																											v176 = 0;
																											v177 = nil;
																											v175 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v66 = 3;
																			break;
																		end
																		if (v129 == 0) then
																			for v152 = 1 - 0, v71 do
																				local v153 = 0;
																				local v154;
																				local v155;
																				local v156;
																				while true do
																					if (v153 == 1) then
																						v156 = nil;
																						while true do
																							if (v154 == 0) then
																								local v169 = 0;
																								while true do
																									if (v169 == 1) then
																										v154 = 1;
																										break;
																									end
																									if (v169 == 0) then
																										v155 = v35();
																										v156 = nil;
																										v169 = 1;
																									end
																								end
																							end
																							if (v154 == 1) then
																								if (v155 == 1) then
																									v156 = v35() ~= (738 - (469 + 269));
																								elseif (v155 == (2 + 0)) then
																									v156 = v38();
																								elseif (v155 == (3 + 0)) then
																									v156 = v39();
																								end
																								v72[v152] = v156;
																								break;
																							end
																						end
																						break;
																					end
																					if (v153 == 0) then
																						v154 = 0;
																						v155 = nil;
																						v153 = 1;
																					end
																				end
																			end
																			v70[(535 + 475) - (816 + 191)] = v35();
																			v129 = 1;
																		end
																	end
																end
																v111 = 1;
															end
														end
													end
													break;
												end
												if (v65 == 0) then
													v66 = 0;
													v67 = nil;
													v65 = 1;
												end
												if (1 == v65) then
													v68 = nil;
													v69 = nil;
													v65 = 2;
												end
											end
										end
										v47 = 2;
									end
									if (v47 == 0) then
										v41 = nil;
										function v41(...)
											return {...}, v20("#", ...);
										end
										v47 = 1;
									end
									if (v47 == 2) then
										v31 = 5;
										break;
									end
								end
							end
							v45 = 1;
						end
						if (v45 == 2) then
							if (0 == v31) then
								local v48 = 0;
								while true do
									if (v48 == 0) then
										v32 = 1;
										v33 = nil;
										v48 = 1;
									end
									if (v48 == 2) then
										v31 = 1;
										break;
									end
									if (v48 == 1) then
										v28 = v12(v11(v28, 5), v7("\176\102", "\158\72\47\161"), function(v73)
											if (v9(v73, 1905 - ((1376 - (132 + 324)) + 983)) == (62 + (1516 - (1415 + 84)))) then
												local v98 = 0;
												local v99;
												while true do
													if (0 == v98) then
														v99 = 0;
														while true do
															if (v99 == 0) then
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		v33 = v8(v11(v73, 1, 1));
																		return "";
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v100 = 0;
												local v101;
												local v102;
												while true do
													if (v100 == 1) then
														while true do
															if (v101 == 0) then
																v102 = v10(v8(v73, 16));
																if v33 then
																	local v135 = 0;
																	local v136;
																	local v137;
																	while true do
																		if (v135 == 0) then
																			v136 = 0;
																			v137 = nil;
																			v135 = 1;
																		end
																		if (v135 == 1) then
																			while true do
																				local v166 = 0;
																				while true do
																					if (v166 == 0) then
																						if (v136 == 0) then
																							local v171 = 0;
																							while true do
																								if (v171 == 0) then
																									v137 = v13(v102, v33);
																									v33 = nil;
																									v171 = 1;
																								end
																								if (v171 == 1) then
																									v136 = 1;
																									break;
																								end
																							end
																						end
																						if (v136 == 1) then
																							return v137;
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																else
																	return v102;
																end
																break;
															end
														end
														break;
													end
													if (v100 == 0) then
														v101 = 0;
														v102 = nil;
														v100 = 1;
													end
												end
											end
										end);
										v34 = nil;
										v48 = 2;
									end
								end
							end
							if (v31 == 5) then
								local v49 = 0;
								while true do
									if (1 == v49) then
										return v43(v42(), {}, v29)(...);
									end
									if (v49 == 0) then
										v43 = nil;
										function v43(v74, v75, v76)
											local v77 = 0;
											local v78;
											local v79;
											local v80;
											local v81;
											while true do
												if (v77 == 1) then
													v80 = nil;
													v81 = nil;
													v77 = 2;
												end
												if (v77 == 0) then
													v78 = 0;
													v79 = nil;
													v77 = 1;
												end
												if (v77 == 2) then
													while true do
														local v112 = 0;
														while true do
															if (v112 == 0) then
																if (v78 == 0) then
																	local v130 = 0;
																	while true do
																		if (v130 == 1) then
																			v78 = 1;
																			break;
																		end
																		if (v130 == 0) then
																			v79 = v74[1 - (0 + 0)];
																			v80 = v74[2];
																			v130 = 1;
																		end
																	end
																end
																if (1 == v78) then
																	local v131 = 0;
																	while true do
																		if (v131 == 0) then
																			v81 = v74[6 - 3];
																			return function(...)
																				local v157 = 0;
																				local v158;
																				local v159;
																				local v160;
																				local v161;
																				local v162;
																				local v163;
																				while true do
																					if (v157 == 1) then
																						v160 = nil;
																						v161 = nil;
																						v157 = 2;
																					end
																					if (v157 == 3) then
																						while true do
																							if (v158 == 2) then
																								local v172 = 0;
																								while true do
																									if (v172 == 1) then
																										v158 = 3;
																										break;
																									end
																									if (v172 == 0) then
																										v163 = nil;
																										function v163()
																											local v183 = 0;
																											local v184;
																											local v185;
																											local v186;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											local v191;
																											local v192;
																											local v193;
																											while true do
																												if (v183 == 2) then
																													v190 = {};
																													for v198 = 0, v162 do
																														if (v198 >= v186) then
																															v188[v198 - v186] = v161[v198 + ((2 - 1) - 0)];
																														else
																															v190[v198] = v161[v198 + ((2308 - (1081 + 471)) - (413 + 123 + 219))];
																														end
																													end
																													v191 = (v162 - v186) + 1;
																													v183 = 3;
																												end
																												if (v183 == 3) then
																													v192 = nil;
																													v193 = nil;
																													while true do
																														local v199 = 0;
																														local v200;
																														while true do
																															if (v199 == 0) then
																																v200 = 0;
																																while true do
																																	if (v200 == 0) then
																																		local v213 = 0;
																																		while true do
																																			if (v213 == 1) then
																																				v200 = 1;
																																				break;
																																			end
																																			if (0 == v213) then
																																				v192 = v184[v159];
																																				v193 = v192[(288 - (83 + 204)) + 0];
																																				v213 = 1;
																																			end
																																		end
																																	end
																																	if (v200 == 1) then
																																		if (v193 <= (64 - 34)) then
																																			if (v193 <= 14) then
																																				if (v193 <= (1 + 0 + (1502 - (415 + 1082)))) then
																																					if (v193 <= (950 - (933 + 15))) then
																																						if (v193 <= 0) then
																																							local v222 = 0;
																																							local v223;
																																							local v224;
																																							while true do
																																								if (v222 == 1) then
																																									while true do
																																										if (0 == v223) then
																																											v224 = v192[1 + 1];
																																											v190[v224] = v190[v224](v21(v190, v224 + 1, v160));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v222 == 0) then
																																									v223 = 0;
																																									v224 = nil;
																																									v222 = 1;
																																								end
																																							end
																																						elseif (v193 == (467 - (451 + 15))) then
																																							if (v192[1 + 1 + 0] == v190[v192[3 + 1]]) then
																																								v159 = v159 + 1;
																																							else
																																								v159 = v192[3 + 0];
																																							end
																																						else
																																							local v227 = 0;
																																							local v228;
																																							local v229;
																																							local v230;
																																							local v231;
																																							while true do
																																								if (v227 == 0) then
																																									v228 = 0;
																																									v229 = nil;
																																									v227 = 1;
																																								end
																																								if (v227 == 1) then
																																									v230 = nil;
																																									v231 = nil;
																																									v227 = 2;
																																								end
																																								if (v227 == 2) then
																																									while true do
																																										if (v228 == 1) then
																																											v231 = 0 - 0;
																																											for v418 = v229, v192[4] do
																																												local v419 = 0;
																																												local v420;
																																												while true do
																																													if (v419 == 0) then
																																														v420 = 0;
																																														while true do
																																															if (v420 == 0) then
																																																v231 = v231 + 1 + (1242 - (105 + 1137));
																																																v190[v418] = v230[v231];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v228 == 0) then
																																											local v381 = 0;
																																											while true do
																																												if (v381 == 1) then
																																													v228 = 1;
																																													break;
																																												end
																																												if (v381 == 0) then
																																													v229 = v192[296 - ((159 - (101 + 41)) + (1022 - (574 + 171)))];
																																													v230 = {v190[v229](v21(v190, v229 + 1 + 0, v192[(1417 - (341 + 1074)) + 1]))};
																																													v381 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v193 <= 4) then
																																						if (v193 > 3) then
																																							v190[v192[2 + 0]] = v190[v192[(8 + 2) - 7]] % v192[1236 - (27 + 1205)];
																																						else
																																							v190[v192[2 + 0]] = v192[3] + v190[v192[2 + 2]];
																																						end
																																					elseif (v193 == 5) then
																																						v190[v192[(2 - 0) - (0 - 0)]] = v190[v192[863 - (744 + 116)]][v190[v192[14 - 10]]];
																																					else
																																						local v236 = 0;
																																						local v237;
																																						local v238;
																																						local v239;
																																						local v240;
																																						local v241;
																																						while true do
																																							if (0 == v236) then
																																								v237 = v192[2];
																																								v238 = v192[4];
																																								v236 = 1;
																																							end
																																							if (v236 == 3) then
																																								if v241 then
																																									local v379 = 0;
																																									local v380;
																																									while true do
																																										if (v379 == 0) then
																																											v380 = 0;
																																											while true do
																																												if (v380 == 0) then
																																													v190[v239] = v241;
																																													v159 = v192[3];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								else
																																									v159 = v159 + (210 - (66 + 143));
																																								end
																																								break;
																																							end
																																							if (v236 == 1) then
																																								v239 = v237 + 2;
																																								v240 = {v190[v237](v190[v237 + (318 - (145 + 9 + 163))], v190[v239])};
																																								v236 = 2;
																																							end
																																							if (v236 == 2) then
																																								for v376 = 1 + 0, v238 do
																																									v190[v239 + v376] = v240[v376];
																																								end
																																								v241 = v240[1 + 0 + (947 - (317 + 630))];
																																								v236 = 3;
																																							end
																																						end
																																					end
																																				elseif (v193 <= 10) then
																																					if (v193 <= ((3 + 26) - (957 - (615 + 321)))) then
																																						if (v193 == (21 - 14)) then
																																							local v242 = 0;
																																							local v243;
																																							local v244;
																																							local v245;
																																							while true do
																																								if (v242 == 1) then
																																									v245 = nil;
																																									while true do
																																										if (v243 == 1) then
																																											for v421 = 253 - ((1021 - (36 + 891)) + (2112 - (35 + 1919))), #v189 do
																																												local v422 = 0;
																																												local v423;
																																												local v424;
																																												while true do
																																													if (v422 == 1) then
																																														while true do
																																															if (v423 == 0) then
																																																v424 = v189[v421];
																																																for v502 = 0, #v424 do
																																																	local v503 = 0;
																																																	local v504;
																																																	local v505;
																																																	local v506;
																																																	local v507;
																																																	while true do
																																																		if (v503 == 2) then
																																																			while true do
																																																				if (v504 == 0) then
																																																					local v519 = 0;
																																																					while true do
																																																						if (v519 == 0) then
																																																							v505 = v424[v502];
																																																							v506 = v505[688 - (587 + 100)];
																																																							v519 = 1;
																																																						end
																																																						if (v519 == 1) then
																																																							v504 = 1;
																																																							break;
																																																						end
																																																					end
																																																				end
																																																				if (1 == v504) then
																																																					v507 = v505[948 - (868 + 78)];
																																																					if ((v506 == v190) and (v507 >= v244)) then
																																																						local v521 = 0;
																																																						local v522;
																																																						while true do
																																																							if (0 == v521) then
																																																								v522 = 0;
																																																								while true do
																																																									if (v522 == 0) then
																																																										v245[v507] = v506[v507];
																																																										v505[1] = v245;
																																																										break;
																																																									end
																																																								end
																																																								break;
																																																							end
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																			break;
																																																		end
																																																		if (v503 == 1) then
																																																			v506 = nil;
																																																			v507 = nil;
																																																			v503 = 2;
																																																		end
																																																		if (v503 == 0) then
																																																			v504 = 0;
																																																			v505 = nil;
																																																			v503 = 1;
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																													if (v422 == 0) then
																																														v423 = 0;
																																														v424 = nil;
																																														v422 = 1;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v243 == 0) then
																																											local v382 = 0;
																																											while true do
																																												if (0 == v382) then
																																													v244 = v192[95 - (86 + 7)];
																																													v245 = {};
																																													v382 = 1;
																																												end
																																												if (v382 == 1) then
																																													v243 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v242 == 0) then
																																									v243 = 0;
																																									v244 = nil;
																																									v242 = 1;
																																								end
																																							end
																																						else
																																							v190[v192[3 - 1]] = v190[v192[7 - 4]] % v190[v192[8 - 4]];
																																						end
																																					elseif (v193 > (8 + 1)) then
																																						local v247 = 0;
																																						local v248;
																																						local v249;
																																						local v250;
																																						local v251;
																																						local v252;
																																						while true do
																																							if (v247 == 2) then
																																								v252 = nil;
																																								while true do
																																									if (v248 == 1) then
																																										local v383 = 0;
																																										while true do
																																											if (v383 == 0) then
																																												v160 = (v251 + v249) - 1;
																																												v252 = (0 - 0) - 0;
																																												v383 = 1;
																																											end
																																											if (1 == v383) then
																																												v248 = 2;
																																												break;
																																											end
																																										end
																																									end
																																									if (v248 == 2) then
																																										for v425 = v249, v160 do
																																											local v426 = 0;
																																											local v427;
																																											while true do
																																												if (v426 == 0) then
																																													v427 = 0;
																																													while true do
																																														if (v427 == 0) then
																																															v252 = v252 + 1 + (0 - 0);
																																															v190[v425] = v250[v252];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v248 == 0) then
																																										local v384 = 0;
																																										while true do
																																											if (0 == v384) then
																																												v249 = v192[1 + 1];
																																												v250, v251 = v187(v190[v249](v190[v249 + 1]));
																																												v384 = 1;
																																											end
																																											if (v384 == 1) then
																																												v248 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v247 == 0) then
																																								v248 = 0;
																																								v249 = nil;
																																								v247 = 1;
																																							end
																																							if (v247 == 1) then
																																								v250 = nil;
																																								v251 = nil;
																																								v247 = 2;
																																							end
																																						end
																																					elseif (v192[1 + (2 - 1)] < v190[v192[3 + 1]]) then
																																						v159 = v159 + (1719 - (1644 + 74));
																																					else
																																						v159 = v192[3];
																																					end
																																				elseif (v193 <= (10 + 1 + 1 + 0)) then
																																					if (v193 == (15 - 4)) then
																																						v76[v192[(14 - 2) - 9]] = v190[v192[2]];
																																					else
																																						do
																																							return v190[v192[146 - (45 + 99)]];
																																						end
																																					end
																																				elseif (v193 == 13) then
																																					if not v190[v192[(17 - 12) - (2 + 1)]] then
																																						v159 = v159 + 1 + 0;
																																					else
																																						v159 = v192[1076 - (742 + 331)];
																																					end
																																				else
																																					v190[v192[6 - (1 + 3)]][v190[v192[5 - 2]]] = v192[3 + 1];
																																				end
																																			elseif (v193 <= ((560 - (413 + 77)) - (7 + 41))) then
																																				if (v193 <= 18) then
																																					if (v193 <= ((3386 - (404 + 1341)) - (735 + 890))) then
																																						if (v193 == 15) then
																																							local v257 = 0;
																																							local v258;
																																							local v259;
																																							while true do
																																								if (v257 == 1) then
																																									while true do
																																										if (v258 == 0) then
																																											v259 = v192[4 - 2];
																																											v190[v259] = v190[v259](v190[v259 + 1]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v257 == 0) then
																																									v258 = 0;
																																									v259 = nil;
																																									v257 = 1;
																																								end
																																							end
																																						else
																																							v190[v192[7 - 5]] = v76[v192[(363 - (91 + 267)) - 2]];
																																						end
																																					elseif (v193 == (67 - (112 - 62))) then
																																						v190[v192[8 - (13 - 7)]] = v190[v192[2 + (3 - 2)]] - v190[v192[4 + 0]];
																																					else
																																						local v263 = 0;
																																						local v264;
																																						local v265;
																																						local v266;
																																						local v267;
																																						while true do
																																							if (v263 == 0) then
																																								v264 = 0;
																																								v265 = nil;
																																								v263 = 1;
																																							end
																																							if (v263 == 1) then
																																								v266 = nil;
																																								v267 = nil;
																																								v263 = 2;
																																							end
																																							if (v263 == 2) then
																																								while true do
																																									if (1 == v264) then
																																										v267 = 1292 - (299 + 993);
																																										for v428 = v265, v192[(3 + 6) - 5] do
																																											local v429 = 0;
																																											local v430;
																																											while true do
																																												if (v429 == 0) then
																																													v430 = 0;
																																													while true do
																																														if (v430 == 0) then
																																															v267 = v267 + 1;
																																															v190[v428] = v266[v267];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v264 == 0) then
																																										local v387 = 0;
																																										while true do
																																											if (v387 == 1) then
																																												v264 = 1;
																																												break;
																																											end
																																											if (v387 == 0) then
																																												v265 = v192[2];
																																												v266 = {v190[v265](v21(v190, v265 + ((3 - 1) - 1), v160))};
																																												v387 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v193 <= ((372 + 312) - (51 + 613))) then
																																					if (v193 == 19) then
																																						v190[v192[2]] = v75[v192[10 - 7]];
																																					else
																																						v190[v192[2]] = v192[3] ~= (0 + (634 - (144 + 490)));
																																					end
																																				elseif (v193 > (48 - 27)) then
																																					do
																																						return;
																																					end
																																				else
																																					v190[v192[1793 - (1604 + 187)]][v190[v192[4 - 1]]] = v190[v192[224 - (71 + 149)]];
																																				end
																																			elseif (v193 <= (507 - ((1194 - (658 + 310)) + 101 + 154))) then
																																				if (v193 <= (1991 - ((8306 - 6388) + 1 + 48))) then
																																					if (v193 > (22 + (3 - 2))) then
																																						if (v190[v192[2]] < v190[v192[4]]) then
																																							v159 = v159 + 1;
																																						else
																																							v159 = v192[1920 - (38 + 1879)];
																																						end
																																					else
																																						v190[v192[1271 - (784 + 485)]] = v190[v192[3]];
																																					end
																																				elseif (v193 > ((6 - 4) + 23)) then
																																					local v275 = 0;
																																					local v276;
																																					local v277;
																																					local v278;
																																					while true do
																																						if (1 == v275) then
																																							v278 = nil;
																																							while true do
																																								if (v276 == 0) then
																																									local v388 = 0;
																																									while true do
																																										if (v388 == 0) then
																																											v277 = v192[2 - 0];
																																											v278 = v190[v192[1 + 2]];
																																											v388 = 1;
																																										end
																																										if (v388 == 1) then
																																											v276 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (v276 == 1) then
																																									v190[v277 + 1 + 0] = v278;
																																									v190[v277] = v278[v192[4]];
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v275 == 0) then
																																							v276 = 0;
																																							v277 = nil;
																																							v275 = 1;
																																						end
																																					end
																																				elseif (v190[v192[2]] == v192[4 + 0]) then
																																					v159 = v159 + (1510 - (1456 + 53));
																																				else
																																					v159 = v192[3];
																																				end
																																			elseif (v193 <= (17 + 11)) then
																																				if (v193 > (1642 - (636 + 979))) then
																																					local v279 = 0;
																																					local v280;
																																					local v281;
																																					local v282;
																																					local v283;
																																					while true do
																																						if (v279 == 1) then
																																							v282 = nil;
																																							v283 = nil;
																																							v279 = 2;
																																						end
																																						if (0 == v279) then
																																							v280 = 0;
																																							v281 = nil;
																																							v279 = 1;
																																						end
																																						if (v279 == 2) then
																																							while true do
																																								if (v280 == 1) then
																																									local v392 = 0;
																																									while true do
																																										if (v392 == 1) then
																																											v280 = 2;
																																											break;
																																										end
																																										if (v392 == 0) then
																																											v283 = v190[v281] + v282;
																																											v190[v281] = v283;
																																											v392 = 1;
																																										end
																																									end
																																								end
																																								if (v280 == 0) then
																																									local v393 = 0;
																																									while true do
																																										if (v393 == 0) then
																																											v281 = v192[7 - 5];
																																											v282 = v190[v281 + 2 + 0];
																																											v393 = 1;
																																										end
																																										if (v393 == 1) then
																																											v280 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (2 == v280) then
																																									if (v282 > ((626 - (595 + 31)) - 0)) then
																																										if (v283 <= v190[v281 + 1 + 0]) then
																																											local v466 = 0;
																																											local v467;
																																											while true do
																																												if (v466 == 0) then
																																													v467 = 0;
																																													while true do
																																														if (v467 == 0) then
																																															v159 = v192[1 + 2];
																																															v190[v281 + ((1104 - (637 + 463)) - 1)] = v283;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																									elseif (v283 >= v190[v281 + (2 - 1) + (0 - 0)]) then
																																										local v468 = 0;
																																										local v469;
																																										while true do
																																											if (v468 == 0) then
																																												v469 = 0;
																																												while true do
																																													if (v469 == 0) then
																																														v159 = v192[(2131 - (873 + 10)) - (64 + 95 + 1086)];
																																														v190[v281 + 1 + 2] = v283;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				else
																																					v190[v192[4 - 2]] = v190[v192[(4 + 2) - (1396 - (1137 + 256))]] + v190[v192[1395 - (1008 + 179 + 204)]];
																																				end
																																			elseif (v193 > 29) then
																																				v75[v192[342 - (194 + 145)]] = v190[v192[96 - (5 + 89)]];
																																			elseif (v190[v192[2]] ~= v192[993 - (627 + 362)]) then
																																				v159 = v159 + 1;
																																			else
																																				v159 = v192[2 + 1 + 0];
																																			end
																																		elseif (v193 <= (45 + 1)) then
																																			if (v193 <= ((78 - 51) + 11)) then
																																				if (v193 <= (9 + 25)) then
																																					if (v193 <= (1333 - (216 + 153 + 928 + 4))) then
																																						if (v193 == 31) then
																																							v190[v192[986 - (417 + 567)]] = v190[v192[408 - (106 + 299)]] + v192[665 - ((637 - 410) + 434)];
																																						else
																																							local v288 = 0;
																																							local v289;
																																							local v290;
																																							local v291;
																																							local v292;
																																							while true do
																																								if (v288 == 2) then
																																									while true do
																																										if (v289 == 1) then
																																											v292 = v190[v290 + 2];
																																											if (v292 > (750 - (541 + 209))) then
																																												if (v291 > v190[v290 + (1 - 0)]) then
																																													v159 = v192[3];
																																												else
																																													v190[v290 + 3] = v291;
																																												end
																																											elseif (v291 < v190[v290 + 1 + 0]) then
																																												v159 = v192[3];
																																											else
																																												v190[v290 + 1 + (532 - (363 + 167))] = v291;
																																											end
																																											break;
																																										end
																																										if (v289 == 0) then
																																											local v395 = 0;
																																											while true do
																																												if (v395 == 1) then
																																													v289 = 1;
																																													break;
																																												end
																																												if (v395 == 0) then
																																													v290 = v192[(2 - 1) + 1 + 0];
																																													v291 = v190[v290];
																																													v395 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v288 == 0) then
																																									v289 = 0;
																																									v290 = nil;
																																									v288 = 1;
																																								end
																																								if (v288 == 1) then
																																									v291 = nil;
																																									v292 = nil;
																																									v288 = 2;
																																								end
																																							end
																																						end
																																					elseif (v193 == 33) then
																																						v190[v192[7 - (3 + 2)]] = #v190[v192[1241 - (94 + 1144)]];
																																					else
																																						local v294 = 0;
																																						local v295;
																																						local v296;
																																						while true do
																																							if (v294 == 0) then
																																								v295 = 0;
																																								v296 = nil;
																																								v294 = 1;
																																							end
																																							if (v294 == 1) then
																																								while true do
																																									if (v295 == 0) then
																																										v296 = v192[2];
																																										do
																																											return v21(v190, v296, v160);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v193 <= (919 - ((1662 - (557 + 1015)) + 570 + 223))) then
																																					if (v193 == (1838 - (942 + 861))) then
																																						v190[v192[2]] = v192[4 - 1] / v190[v192[4]];
																																					else
																																						local v298 = 0;
																																						local v299;
																																						local v300;
																																						while true do
																																							if (v298 == 1) then
																																								while true do
																																									if (v299 == 0) then
																																										v300 = v192[910 - (707 + 201)];
																																										do
																																											return v190[v300](v21(v190, v300 + ((434 - (371 + 61)) - 1), v160));
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v298 == 0) then
																																								v299 = 0;
																																								v300 = nil;
																																								v298 = 1;
																																							end
																																						end
																																					end
																																				elseif (v193 == 37) then
																																					for v359 = v192[2 + 0], v192[8 - 5] do
																																						v190[v359] = nil;
																																					end
																																				else
																																					local v301 = 0;
																																					local v302;
																																					local v303;
																																					local v304;
																																					local v305;
																																					while true do
																																						if (v301 == 2) then
																																							while true do
																																								if (v302 == 2) then
																																									for v431 = 2 - (1 + 0), v192[(6 - 4) + (2 - 0)] do
																																										local v432 = 0;
																																										local v433;
																																										local v434;
																																										while true do
																																											if (0 == v432) then
																																												v433 = 0;
																																												v434 = nil;
																																												v432 = 1;
																																											end
																																											if (v432 == 1) then
																																												while true do
																																													if (v433 == 0) then
																																														local v494 = 0;
																																														while true do
																																															if (1 == v494) then
																																																v433 = 1;
																																																break;
																																															end
																																															if (v494 == 0) then
																																																v159 = v159 + (1956 - (1628 + 327));
																																																v434 = v184[v159];
																																																v494 = 1;
																																															end
																																														end
																																													end
																																													if (1 == v433) then
																																														if (v434[1] == (1648 - (1192 + 433))) then
																																															v305[v431 - 1] = {v190,v434[1260 - (127 + 1130)]};
																																														else
																																															v305[v431 - 1] = {v75,v434[1 + 2]};
																																														end
																																														v189[#v189 + 1] = v305;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									v190[v192[2]] = v43(v303, v304, v76);
																																									break;
																																								end
																																								if (v302 == 0) then
																																									local v399 = 0;
																																									while true do
																																										if (v399 == 0) then
																																											v303 = v185[v192[8 - 5]];
																																											v304 = nil;
																																											v399 = 1;
																																										end
																																										if (v399 == 1) then
																																											v302 = 1;
																																											break;
																																										end
																																									end
																																								end
																																								if (v302 == 1) then
																																									local v400 = 0;
																																									while true do
																																										if (v400 == 0) then
																																											v305 = {};
																																											v304 = v18({}, {[v7("\196\178\60\82\204\40\227", "\155\237\85\60\168\77")]=function(v474, v475)
																																												local v476 = 0;
																																												local v477;
																																												local v478;
																																												while true do
																																													if (v476 == 0) then
																																														v477 = 0;
																																														v478 = nil;
																																														v476 = 1;
																																													end
																																													if (v476 == 1) then
																																														while true do
																																															if (0 == v477) then
																																																local v515 = 0;
																																																while true do
																																																	if (v515 == 0) then
																																																		v478 = v305[v475];
																																																		return v478[(2 - 1) - (1802 - (26 + 1776))][v478[2 - 0]];
																																																	end
																																																end
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end,[v7("\17\153\112\112\32\39\168\122\112\47", "\78\198\30\21\87")]=function(v479, v480, v481)
																																												local v482 = 0;
																																												local v483;
																																												local v484;
																																												while true do
																																													if (v482 == 1) then
																																														while true do
																																															if (v483 == 0) then
																																																v484 = v305[v480];
																																																v484[(2 - 1) + (0 - 0)][v484[2 - 0]] = v481;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																													if (0 == v482) then
																																														v483 = 0;
																																														v484 = nil;
																																														v482 = 1;
																																													end
																																												end
																																											end});
																																											v400 = 1;
																																										end
																																										if (1 == v400) then
																																											v302 = 2;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v301 == 0) then
																																							v302 = 0;
																																							v303 = nil;
																																							v301 = 1;
																																						end
																																						if (v301 == 1) then
																																							v304 = nil;
																																							v305 = nil;
																																							v301 = 2;
																																						end
																																					end
																																				end
																																			elseif (v193 <= (859 - (331 + 486))) then
																																				if (v193 <= 40) then
																																					if (v193 == (25 + 14)) then
																																						v190[v192[2]]();
																																					else
																																						local v306 = 0;
																																						local v307;
																																						local v308;
																																						local v309;
																																						local v310;
																																						local v311;
																																						while true do
																																							if (v306 == 2) then
																																								v311 = nil;
																																								while true do
																																									if (v307 == 0) then
																																										local v401 = 0;
																																										while true do
																																											if (v401 == 1) then
																																												v307 = 1;
																																												break;
																																											end
																																											if (v401 == 0) then
																																												v308 = v192[2];
																																												v309, v310 = v187(v190[v308](v21(v190, v308 + 1, v160)));
																																												v401 = 1;
																																											end
																																										end
																																									end
																																									if (1 == v307) then
																																										local v402 = 0;
																																										while true do
																																											if (1 == v402) then
																																												v307 = 2;
																																												break;
																																											end
																																											if (v402 == 0) then
																																												v160 = (v310 + v308) - 1;
																																												v311 = 0;
																																												v402 = 1;
																																											end
																																										end
																																									end
																																									if (v307 == 2) then
																																										for v435 = v308, v160 do
																																											local v436 = 0;
																																											local v437;
																																											while true do
																																												if (v436 == 0) then
																																													v437 = 0;
																																													while true do
																																														if (0 == v437) then
																																															v311 = v311 + 1;
																																															v190[v435] = v309[v311];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (1 == v306) then
																																								v309 = nil;
																																								v310 = nil;
																																								v306 = 2;
																																							end
																																							if (0 == v306) then
																																								v307 = 0;
																																								v308 = nil;
																																								v306 = 1;
																																							end
																																						end
																																					end
																																				elseif (v193 > 41) then
																																					v190[v192[2]] = {};
																																				else
																																					local v313 = 0;
																																					local v314;
																																					local v315;
																																					while true do
																																						if (v313 == 0) then
																																							v314 = 0;
																																							v315 = nil;
																																							v313 = 1;
																																						end
																																						if (v313 == 1) then
																																							while true do
																																								if (v314 == 0) then
																																									v315 = v192[2];
																																									v190[v315] = v190[v315]();
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																			elseif (v193 <= 44) then
																																				if (v193 == 43) then
																																					local v316 = 0;
																																					local v317;
																																					local v318;
																																					while true do
																																						if (v316 == 1) then
																																							while true do
																																								if (v317 == 0) then
																																									v318 = v192[(14 - 9) - 3];
																																									v190[v318](v190[v318 + (3 - 2)]);
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v316 == 0) then
																																							v317 = 0;
																																							v318 = nil;
																																							v316 = 1;
																																						end
																																					end
																																				else
																																					local v319 = 0;
																																					local v320;
																																					local v321;
																																					while true do
																																						if (v319 == 1) then
																																							while true do
																																								if (v320 == 0) then
																																									v321 = v192[2];
																																									v190[v321](v21(v190, v321 + 1, v192[3]));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v319 == 0) then
																																							v320 = 0;
																																							v321 = nil;
																																							v319 = 1;
																																						end
																																					end
																																				end
																																			elseif (v193 > (214 - (1623 - (655 + 799)))) then
																																				local v322 = 0;
																																				local v323;
																																				local v324;
																																				local v325;
																																				while true do
																																					if (v322 == 1) then
																																						v325 = nil;
																																						while true do
																																							if (v323 == 0) then
																																								local v407 = 0;
																																								while true do
																																									if (v407 == 1) then
																																										v323 = 1;
																																										break;
																																									end
																																									if (v407 == 0) then
																																										v324 = v192[4 - 1];
																																										v325 = v190[v324];
																																										v407 = 1;
																																									end
																																								end
																																							end
																																							if (v323 == 1) then
																																								for v438 = v324 + (1 - 0), v192[1849 - (1688 + 157)] do
																																									v325 = v325 .. v190[v438];
																																								end
																																								v190[v192[(519 + 1160) - (1512 + (514 - (215 + 134)))]] = v325;
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																					if (v322 == 0) then
																																						v323 = 0;
																																						v324 = nil;
																																						v322 = 1;
																																					end
																																				end
																																			else
																																				v190[v192[1076 - (759 + 315)]] = v192[3];
																																			end
																																		elseif (v193 <= 54) then
																																			if (v193 <= (1597 - (232 + 1315))) then
																																				if (v193 <= 48) then
																																					if (v193 == (37 + 10)) then
																																						if (v192[2] < v190[v192[640 - (548 + 88)]]) then
																																							v159 = v192[3];
																																						else
																																							v159 = v159 + 1;
																																						end
																																					else
																																						local v328 = 0;
																																						local v329;
																																						local v330;
																																						while true do
																																							if (v328 == 1) then
																																								while true do
																																									if (v329 == 0) then
																																										v330 = v192[545 - (202 + 145 + 196)];
																																										v190[v330](v21(v190, v330 + ((4998 - 3454) - ((744 - 411) + 1210)), v160));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v328 == 0) then
																																								v329 = 0;
																																								v330 = nil;
																																								v328 = 1;
																																							end
																																						end
																																					end
																																				elseif (v193 > (149 - 100)) then
																																					v190[v192[1 + 1]] = v190[v192[941 - (335 + 286 + 317)]] * v190[v192[4 + 0]];
																																				elseif v190[v192[4 - 2]] then
																																					v159 = v159 + (1612 - (124 + 839 + 648));
																																				else
																																					v159 = v192[3];
																																				end
																																			elseif (v193 <= (103 - 51)) then
																																				if (v193 > (78 - 27)) then
																																					local v332 = 0;
																																					local v333;
																																					local v334;
																																					while true do
																																						if (v332 == 0) then
																																							v333 = 0;
																																							v334 = nil;
																																							v332 = 1;
																																						end
																																						if (v332 == 1) then
																																							while true do
																																								if (v333 == 0) then
																																									v334 = v192[5 - 3];
																																									do
																																										return v21(v190, v334, v334 + v192[(6 + 1) - 4]);
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v190[v192[(274 - 126) - (65 + 81)]] == v190[v192[10 - 6]]) then
																																					v159 = v159 + 1;
																																				else
																																					v159 = v192[3];
																																				end
																																			elseif (v193 == (415 - (124 + 238))) then
																																				local v335 = 0;
																																				local v336;
																																				local v337;
																																				while true do
																																					if (0 == v335) then
																																						v336 = 0;
																																						v337 = nil;
																																						v335 = 1;
																																					end
																																					if (v335 == 1) then
																																						while true do
																																							if (v336 == 0) then
																																								v337 = v192[2 + 0];
																																								do
																																									return v190[v337](v21(v190, v337 + 1, v192[3]));
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			else
																																				v190[v192[2]] = v190[v192[3]] - v192[1683 - (1309 + (434 - (31 + 33)))];
																																			end
																																		elseif (v193 <= 58) then
																																			if (v193 <= (162 - (493 - (301 + 86)))) then
																																				if (v193 > (32 + 23)) then
																																					local v339 = 0;
																																					local v340;
																																					local v341;
																																					while true do
																																						if (v339 == 0) then
																																							v340 = 0;
																																							v341 = nil;
																																							v339 = 1;
																																						end
																																						if (v339 == 1) then
																																							while true do
																																								if (v340 == 1) then
																																									for v439 = v341, v160 do
																																										local v440 = 0;
																																										local v441;
																																										local v442;
																																										while true do
																																											if (v440 == 0) then
																																												v441 = 0;
																																												v442 = nil;
																																												v440 = 1;
																																											end
																																											if (v440 == 1) then
																																												while true do
																																													if (v441 == 0) then
																																														v442 = v188[v439 - v341];
																																														v190[v439] = v442;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v340) then
																																									local v412 = 0;
																																									while true do
																																										if (v412 == 1) then
																																											v340 = 1;
																																											break;
																																										end
																																										if (v412 == 0) then
																																											v341 = v192[8 - (1430 - (1313 + 111))];
																																											v160 = (v341 + v191) - (436 - (59 + (1656 - (36 + 1244))));
																																											v412 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				else
																																					v159 = v192[(5 - 2) + 0];
																																				end
																																			elseif (v193 == (1263 - (969 + 237))) then
																																				local v343 = 0;
																																				local v344;
																																				local v345;
																																				while true do
																																					if (0 == v343) then
																																						v344 = 0;
																																						v345 = nil;
																																						v343 = 1;
																																					end
																																					if (v343 == 1) then
																																						while true do
																																							if (v344 == 0) then
																																								v345 = v192[(6 - 4) + 0];
																																								v190[v345] = v190[v345](v21(v190, v345 + 1 + 0, v192[3]));
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																			else
																																				local v346 = 0;
																																				local v347;
																																				local v348;
																																				local v349;
																																				local v350;
																																				local v351;
																																				while true do
																																					if (v346 == 2) then
																																						v351 = nil;
																																						while true do
																																							if (v347 == 2) then
																																								for v443 = v348, v160 do
																																									local v444 = 0;
																																									local v445;
																																									while true do
																																										if (v444 == 0) then
																																											v445 = 0;
																																											while true do
																																												if (v445 == 0) then
																																													v351 = v351 + 1;
																																													v190[v443] = v349[v351];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (1 == v347) then
																																								local v415 = 0;
																																								while true do
																																									if (v415 == 0) then
																																										v160 = (v350 + v348) - (1366 - (550 + 815));
																																										v351 = 0 + 0;
																																										v415 = 1;
																																									end
																																									if (v415 == 1) then
																																										v347 = 2;
																																										break;
																																									end
																																								end
																																							end
																																							if (v347 == 0) then
																																								local v416 = 0;
																																								while true do
																																									if (v416 == 1) then
																																										v347 = 1;
																																										break;
																																									end
																																									if (0 == v416) then
																																										v348 = v192[5 - (3 + 0)];
																																										v349, v350 = v187(v190[v348](v21(v190, v348 + ((91 + 190) - ((200 - 68) + 148)), v192[(2 + 4) - 3])));
																																										v416 = 1;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																					if (v346 == 1) then
																																						v349 = nil;
																																						v350 = nil;
																																						v346 = 2;
																																					end
																																					if (v346 == 0) then
																																						v347 = 0;
																																						v348 = nil;
																																						v346 = 1;
																																					end
																																				end
																																			end
																																		elseif (v193 <= (1733 - (276 + 623 + (1115 - 341)))) then
																																			if (v193 > (157 - 98)) then
																																				v190[v192[2]] = v190[v192[3]][v192[(644 - (462 + 181)) + 3]];
																																			else
																																				local v354 = 0;
																																				local v355;
																																				local v356;
																																				local v357;
																																				while true do
																																					if (1 == v354) then
																																						v357 = nil;
																																						while true do
																																							if (v355 == 1) then
																																								for v446 = v356 + 1, v160 do
																																									v15(v357, v190[v446]);
																																								end
																																								break;
																																							end
																																							if (v355 == 0) then
																																								local v417 = 0;
																																								while true do
																																									if (v417 == 0) then
																																										v356 = v192[2 + 0];
																																										v357 = v190[v356];
																																										v417 = 1;
																																									end
																																									if (1 == v417) then
																																										v355 = 1;
																																										break;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																					if (v354 == 0) then
																																						v355 = 0;
																																						v356 = nil;
																																						v354 = 1;
																																					end
																																				end
																																			end
																																		elseif (v193 == (118 - 57)) then
																																			if (v190[v192[2]] ~= v190[v192[485 - (60 + 177 + 244)]]) then
																																				v159 = v159 + (1282 - (610 + 671));
																																			else
																																				v159 = v192[(60 + 841) - (517 + 381)];
																																			end
																																		else
																																			v190[v192[2]] = v43(v185[v192[1 + (3 - 1)]], nil, v76);
																																		end
																																		v159 = v159 + ((3 - 2) - 0);
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (0 == v183) then
																													v184 = v79;
																													v185 = v80;
																													v186 = v81;
																													v183 = 1;
																												end
																												if (v183 == 1) then
																													v187 = v41;
																													v188 = {};
																													v189 = {};
																													v183 = 2;
																												end
																											end
																										end
																										v172 = 1;
																									end
																								end
																							end
																							if (v158 == 1) then
																								local v173 = 0;
																								while true do
																									if (v173 == 0) then
																										v161 = {...};
																										v162 = v20("#", ...) - (1 + 0);
																										v173 = 1;
																									end
																									if (v173 == 1) then
																										v158 = 2;
																										break;
																									end
																								end
																							end
																							if (v158 == 0) then
																								local v174 = 0;
																								while true do
																									if (v174 == 0) then
																										v159 = 3 - (2 + 0);
																										v160 = -(1 + 0);
																										v174 = 1;
																									end
																									if (v174 == 1) then
																										v158 = 1;
																										break;
																									end
																								end
																							end
																							if (v158 == 3) then
																								_G['A'], _G['B'] = v41(v19(v163));
																								if not _G['A'][1] then
																									local v180 = 0;
																									local v181;
																									local v182;
																									while true do
																										if (v180 == 0) then
																											v181 = 0;
																											v182 = nil;
																											v180 = 1;
																										end
																										if (v180 == 1) then
																											while true do
																												if (v181 == 0) then
																													v182 = v74[164 - (138 + 22)][v159] or "?";
																													error(v7("\44\50\29\65\224\11\113\10\90\226\16\35\79\73\228\95\10", "\127\81\111\40\144") .. v182 .. v7("\69\227", "\24\217\222\104\128\142") .. _G['A'][2 + 0]);
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									return v21(_G['A'], 36 - ((47 - 32) + (28 - 9)), _G['B']);
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v157 == 2) then
																						v162 = nil;
																						v163 = nil;
																						v157 = 3;
																					end
																					if (v157 == 0) then
																						v158 = 0;
																						v159 = nil;
																						v157 = 1;
																					end
																				end
																			end;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v49 = 1;
									end
								end
							end
							break;
						end
						if (v45 == 1) then
							if (v31 == 1) then
								local v50 = 0;
								while true do
									if (v50 == 1) then
										function v35()
											local v82 = 0;
											local v83;
											local v84;
											while true do
												if (0 == v82) then
													v83 = 0;
													v84 = nil;
													v82 = 1;
												end
												if (v82 == 1) then
													while true do
														local v113 = 0;
														while true do
															if (0 == v113) then
																if ((1 - 0) == v83) then
																	return v84;
																end
																if (v83 == (0 + 0)) then
																	local v132 = 0;
																	while true do
																		if (v132 == 1) then
																			v83 = 1 + 0;
																			break;
																		end
																		if (v132 == 0) then
																			v84 = v9(v28, v32, v32);
																			v32 = v32 + 1;
																			v132 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v36 = nil;
										v50 = 2;
									end
									if (v50 == 0) then
										function v34(v85, v86, v87)
											if v87 then
												local v103 = 0;
												local v104;
												local v105;
												while true do
													if (v103 == 0) then
														v104 = 0 + 0;
														v105 = nil;
														v103 = 1;
													end
													if (1 == v103) then
														while true do
															if (v104 == (0 + 0)) then
																local v117 = 0;
																while true do
																	if (v117 == 0) then
																		v105 = (v85 / (((5 + 0) - (1638 - (541 + 1094))) ^ (v86 - (1 - 0)))) % ((7 - (5 + 0)) ^ (((v87 - (1082 - (((170 + 2169) - (527 + 1160)) + (788 - (111 + 248))))) - (v86 - ((233 + 744) - (949 + 27)))) + (((6506 - 4419) - (1901 + 6)) - (((5 + 1732) - (188 + 1545)) + 111 + 64))));
																		return v105 - (v105 % (1 + 0 + (1464 - (1448 + 16))));
																	end
																end
															end
														end
														break;
													end
												end
											else
												local v106 = 0;
												local v107;
												local v108;
												while true do
													if (v106 == 0) then
														v107 = 1476 - (280 + 1196);
														v108 = nil;
														v106 = 1;
													end
													if (v106 == 1) then
														while true do
															if ((0 + 0) == v107) then
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		v108 = ((2664 - (671 + (790 - 467))) - (((4810 - 2453) - ((1773 - (568 + 757)) + 292)) + 37 + 13 + 1)) ^ (v86 - (3 - 2));
																		return (((v85 % (v108 + v108)) >= v108) and 1) or ((0 - 0) + 0);
																	end
																end
															end
														end
														break;
													end
												end
											end
										end
										v35 = nil;
										v50 = 1;
									end
									if (v50 == 2) then
										v31 = 2;
										break;
									end
								end
							end
							if (v31 == 2) then
								local v51 = 0;
								while true do
									if (1 == v51) then
										function v37()
											local v88 = 0;
											local v89;
											local v90;
											local v91;
											local v92;
											local v93;
											while true do
												if (v88 == 1) then
													v91 = nil;
													v92 = nil;
													v88 = 2;
												end
												if (0 == v88) then
													v89 = 0;
													v90 = nil;
													v88 = 1;
												end
												if (v88 == 2) then
													v93 = nil;
													while true do
														local v114 = 0;
														while true do
															if (v114 == 0) then
																if (v89 == 1) then
																	return (v93 * (2468532 + 14308684)) + (v92 * (66714 - (((9505 - 6466) - (5234 - 3033)) + (965 - (2991 - 2366))))) + (v91 * ((921 + 613) - ((1732 - 908) + (1410 - 956)))) + v90;
																end
																if (v89 == 0) then
																	local v133 = 0;
																	while true do
																		if (0 == v133) then
																			v90, v91, v92, v93 = v9(v28, v32, v32 + ((4140 - 2997) - (180 + 23 + 65 + (1183 - 311))));
																			v32 = v32 + (1497 - (247 + 1246));
																			v133 = 1;
																		end
																		if (v133 == 1) then
																			v89 = 1;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v38 = nil;
										v51 = 2;
									end
									if (v51 == 0) then
										function v36()
											local v94 = 0;
											local v95;
											local v96;
											local v97;
											while true do
												if (v94 == 0) then
													v95 = 0;
													v96 = nil;
													v94 = 1;
												end
												if (1 == v94) then
													v97 = nil;
													while true do
														local v115 = 0;
														while true do
															if (0 == v115) then
																if (v95 == 1) then
																	return (v97 * (207 + 49)) + v96;
																end
																if (v95 == 0) then
																	local v134 = 0;
																	while true do
																		if (v134 == 1) then
																			v95 = 167 - (14 + 152);
																			break;
																		end
																		if (v134 == 0) then
																			v96, v97 = v9(v28, v32, v32 + 2);
																			v32 = v32 + 1 + 1;
																			v134 = 1;
																		end
																	end
																end
																break;
															end
														end
													end
													break;
												end
											end
										end
										v37 = nil;
										v51 = 1;
									end
									if (v51 == 2) then
										v31 = 3;
										break;
									end
								end
							end
							v45 = 2;
						end
					end
				end
				break;
			end
		end
	end
	vv17(), ...);
end
